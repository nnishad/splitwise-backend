// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String
  password        String    // Hashed password
  avatar          String?   // URL to avatar image
  preferredCurrency String  @default("USD")
  isDeleted       Boolean   @default(false)
  deletedAt       DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  sessions        Session[]
  blockedUsers    UserBlock[] @relation("UserBlocks")
  blockedByUsers  UserBlock[] @relation("BlockedByUsers")

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  deviceInfo String? // Browser, OS, device info
  ipAddress String?
  isActive  Boolean  @default(true)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model UserBlock {
  id          String   @id @default(cuid())
  blockerId   String   // User who is blocking
  blockedId   String   // User who is being blocked
  createdAt   DateTime @default(now())

  // Relations
  blocker     User     @relation("UserBlocks", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked     User     @relation("BlockedByUsers", fields: [blockedId], references: [id], onDelete: Cascade)

  @@unique([blockerId, blockedId])
  @@map("user_blocks")
} 